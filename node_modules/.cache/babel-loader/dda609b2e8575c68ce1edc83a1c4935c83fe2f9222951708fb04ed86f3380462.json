{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n  return response.json();\n});\nexport const addTodo = createAsyncThunk('todos/addTodo', async todo => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(todo)\n  });\n  return response.json();\n});\nexport const updateTodo = createAsyncThunk('todos/updateTodo', async ({\n  id,\n  updates\n}) => {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updates)\n  });\n  return response.json();\n});\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchTodos.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload.slice(0, 10);\n    }).addCase(fetchTodos.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(addTodo.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    }).addCase(updateTodo.fulfilled, (state, action) => {\n      const index = state.items.findIndex(todo => todo.id === action.payload.id);\n      if (index !== -1) {\n        state.items[index] = action.payload;\n      }\n    });\n  }\n});\nexport default todoSlice.reducer;\n\n// src/store/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './todoSlice';\nexport const store = configureStore({\n  reducer: {\n    todos: todoReducer\n  }\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchTodos","response","fetch","json","addTodo","todo","method","headers","body","JSON","stringify","updateTodo","id","updates","todoSlice","name","initialState","items","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","slice","rejected","message","push","index","findIndex","reducer","configureStore","todoReducer","store","todos"],"sources":["C:/Users/Vansh Maheshwari/Desktop/internship_submission/bytive/to-do-list/src/store/todoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\r\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos');\r\n  return response.json();\r\n});\r\n\r\nexport const addTodo = createAsyncThunk('todos/addTodo', async (todo) => {\r\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(todo),\r\n  });\r\n  return response.json();\r\n});\r\n\r\nexport const updateTodo = createAsyncThunk('todos/updateTodo', async ({ id, updates }) => {\r\n  const response = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\r\n    method: 'PATCH',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(updates),\r\n  });\r\n  return response.json();\r\n});\r\n\r\nconst todoSlice = createSlice({\r\n  name: 'todos',\r\n  initialState: {\r\n    items: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTodos.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchTodos.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.items = action.payload.slice(0, 10);\r\n      })\r\n      .addCase(fetchTodos.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(addTodo.fulfilled, (state, action) => {\r\n        state.items.push(action.payload);\r\n      })\r\n      .addCase(updateTodo.fulfilled, (state, action) => {\r\n        const index = state.items.findIndex(todo => todo.id === action.payload.id);\r\n        if (index !== -1) {\r\n          state.items[index] = action.payload;\r\n        }\r\n      });\r\n  },\r\n});\r\n\r\nexport default todoSlice.reducer;\r\n\r\n// src/store/store.js\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport todoReducer from './todoSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    todos: todoReducer,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}